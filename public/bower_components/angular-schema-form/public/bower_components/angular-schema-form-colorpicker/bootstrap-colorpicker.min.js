angular.module("schemaForm").run(["$templateCache",function(r){r.put("directives/decorators/bootstrap/colorpicker/colorpicker.html","<div class=\"form-group\" ng-class=\"{'has-error': hasError()}\"><label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label><div ng-init=\"defaultSpectrumOptions = { showInput: true, showAlpha: true, allowEmpty: true, showPalette: true, preferredFormat: form.colorFormat || 'rgb', palette: [['#fce94f', '#fcaf3e', '#e9b96e'], ['#8ae234', '#729fcf', '#ad7fa8'], ['#ef2929', '#888a85', '#deface']] }\"><spectrum-colorpicker ng-model=\"$$value$$\" format=\"form.colorFormat || 'rgb'\" style=\"background-color: white\" type=\"color\" schema-validate=\"form\" options=\"form.spectrumOptions || defaultSpectrumOptions\"></spectrum-colorpicker></div><span class=\"help-block\">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>")}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(r,o,e){var t=function(o,t,c){if("string"===t.type&&"color"==t.format){var a=r.stdFormObj(o,t,c);return a.key=c.path,a.type="colorpicker",c.lookup[e.stringify(c.path)]=a,a}};r.defaults.string.unshift(t),o.addMapping("bootstrapDecorator","colorpicker","directives/decorators/bootstrap/colorpicker/colorpicker.html"),o.createDirective("colorpicker","directives/decorators/bootstrap/colorpicker/colorpicker.html")}]);